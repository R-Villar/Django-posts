# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# CMake
CMakeFiles/
CMakeCache.txt
CMakeScripts/
CTestTestfile.cmake
cmake_install.cmake
compile_commands.json
Makefile
Testing/

# Poetry
#   According to pypa/poetry#1915, it is recommended to include poetry.lock in version control.
#   However, in case of collaboration, if having poetry.lock raises conflicts, pipenv may be used
#   for generating requirements.txt
#poetry.lock

# Pylance (https://github.com/microsoft/pylance-release)
#   Pylance is an optional plugin for Visual Studio Code that provides enhanced Python language services.
#   Pylance depends on the Pyright static type checking tool to provide features like IntelliSense and linting.
.pyright

# Pyre type checker
.pyre/

# fastlane
# It is recommended to not store the screenshots in the git repo. Instead, use fastlane to re-generate the
# screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://github.com/fastlane/fastlane/blob/master/docs/Gitignore.md
fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots

# Codecov
# Used by https://codecov.io
.codecov

# https://git-lfs.github.com/
# Git Large File Storage
#   1. Download and install the Git command line extension from https://git-lfs.github.com/.
#   2. You can configure Git LFS using the git-lfs command.
#git-lfs/

# End of generated template
